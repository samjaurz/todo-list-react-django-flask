# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: [push]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "Folders"
          ls -la
          pwd
          echo " folder in pwd"
                  ls -d */
          pwd
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - run : pwd
      - name: Install poetry
        uses: abatilo/actions-poetry@v4
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: |
          cd flask-api
          poetry install
      - name: change python path
        run: |
           cd flask-api
           pwd
           export PYTHONPATH=$(pwd):$PYTHONPATH
           poetry run pytest
        env:
            SUPABASE_DATABASE_URL: "sqlite:///:memory:"

      - name: Run pylint
        run : |
              pwd
              cd flask-api
              poetry run pylint
            
